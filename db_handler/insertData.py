import sqlite3


def insert_data(data, data_type):
    conn = sqlite3.connect('../db/collection.db')
    curs = conn.cursor()

    query = generator[data_type]()

    curs.executemany(query, data)  # [(), (), ... ,()]

    conn.commit()
    conn.close()


def generate_book():
    return 'INSERT INTO book VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)'


def generate_author():
    return 'INSERT INTO author VALUES (?,?,?,?,?,?,?,?,?,?,?)'


def generate_movie():
    return 'INSERT INTO movie VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)'


def generate_tv():
    return 'INSERT INTO tv VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)'


def generate_celebrity():
    return 'INSERT INTO celebrity VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?)'


def generate_music():
    return 'INSERT INTO music VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)'


def generate_singer():
    return 'INSERT INTO singer VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?)'


generator = {
    "book": generate_book,
    "author": generate_author(),
    "movie": generate_movie(),
    "tv": generate_tv(),
    "celebrity": generate_celebrity(),
    "music": generate_music(),
    "singer": generate_singer()
}

